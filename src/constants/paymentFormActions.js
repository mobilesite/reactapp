let target = {
  PAYMENT_FORM_WALLET_SELECTED: 'PAYMENT.PAYMENT_FORM_WALLET_SELECTED',
  PAYMENT_FORM_SOURCE_TOKEN_SELECTED: 'PAYMENT.PAYMENT_FORM_SOURCE_TOKEN_SELECTED',
  PAYMENT_FORM_SOURCE_AMOUNT_SPECIFIED: 'PAYMENT.PAYMENT_FORM_SOURCE_AMOUNT_SPECIFIED',
  PAYMENT_FORM_DEST_TOKEN_SELECTED: 'PAYMENT.PAYMENT_FORM_DEST_TOKEN_SELECTED',
  PAYMENT_FORM_MIN_CONVERSION_RATE_SPECIFIED: 'PAYMENT.PAYMENT_FORM_MIN_CONVERSION_RATE_SPECIFIED',
  PAYMENT_FORM_RECIPIENT_SPECIFIED: 'PAYMENT.PAYMENT_FORM_RECIPIENT_SPECIFIED',
  PAYMENT_FORM_GAS_SPECIFIED: 'PAYMENT.PAYMENT_FORM_GAS_SPECIFIED',
  PAYMENT_FORM_GAS_PRICE_SPECIFIED: 'PAYMENT.PAYMENT_FORM_GAS_PRICE_SPECIFIED',
  PAYMENT_FORM_ERROR_THREW: 'PAYMENT.PAYMENT_FORM_ERROR_THREW',
  PAYMENT_FORM_EMPTIED: 'PAYMENT.PAYMENT_FORM_EMPTIED',
  PAYMENT_FORM_ONLY_APPROVE_TOKEN_SPECIFIED: 'PAYMENT.PAYMENT_FORM_ONLY_APPROVE_TOKEN_SPECIFIED',
  PAYMENT_FORM_SUGGEST_RATE: 'PAYMENT.PAYMENT_FORM_SUGGEST_RATE',  
}
let handler = {
  get: (target, key) => {
    if (target.hasOwnProperty(key)) return target[key];
    else throw new Error(`Fired a wrong actionname: ${key}. Available Actions: ${Object.keys(target)}`);
  }
}
const proxy = new Proxy(target, handler)
export default proxy